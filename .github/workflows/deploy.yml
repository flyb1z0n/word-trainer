name: Deploy Telegram Bot

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy-bot:
    runs-on: ubuntu-latest
    steps:
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            export TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            cd ./word-trainer
            git fetch
            git checkout ${{ github.sha }}
            cd ./bot
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password "${{ secrets.DOCKERHUB_TOKEN }}"
            docker-compose build --build-arg COMMIT_HASH=${{ steps.vars.outputs.sha_short }}
            docker-compose up -d
  deploy-site:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install
        working-directory: ./site

      - name: Build the site
        run: npm run build
        working-directory: ./site

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          source: "site/dist/*"
          target: "/home/${{ secrets.SERVER_USER }}/site/dist"

      - name: Copy Dockerfile to server
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          source: "site/Dockerfile"
          target: "/home/${{ secrets.SERVER_USER }}/site"

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/site
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password "${{ secrets.DOCKERHUB_TOKEN }}"
            docker build -t wb-site .
            docker stop wb-site-container || true
            docker rm wb-site-container || true
            docker run -d --name wb-site-container -p 80:80 wb-site
